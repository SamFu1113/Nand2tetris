// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * This chip implements the complete address space of the
 * computer's data memory, including RAM and memory mapped I/O.
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: If load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory
 * location specified by address. If load == 1, the in value is loaded
 * into the memory location specified by address. This value becomes
 * available through the out output in the next time step.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used.
 * Access to address>0x6000 is invalid. Access to any address in
 * the range 0x4000 to 0x5FFF results in accessing the screen memory
 * map. Access to address 0x6000 results in accessing the keyboard
 * memory map. The behavior in these addresses is described in the
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    // Put your code here.
    DMux(in = load, sel = address[14], a = iRam, b = iIO);
    DMux(in = iIO, sel = address[13], a = iScn, b = iKbd);
    RAM16K(in = in, load = iRam, address = address[0..13], out = oRam);
    Screen(in = in, load = iScn, address = address[0..12], out = oScn);
    Keyboard(out = oKbd);
    Mux16(a = oScn, b = oKbd, sel = address[13], out = oIO);
    Mux16(a = oRam, b = oIO, sel = address[14], out = out);
}