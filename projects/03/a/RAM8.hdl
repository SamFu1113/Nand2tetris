// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16-bit wide.
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM8[address(t)](t)
 *     Write: If load(t-1) then RAM8[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory
 * location specified by address. If load == 1, the in value is loaded
 * into the memory location specified by address.  This value becomes
 * available through the out output starting from the next time step.
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here.
    DMux8Way(in = load, sel = address,
             a = oa, b = ob, c = oc, d = od,
             e = oe, f = af, g = og, h = oh);

    Register(in = in, load = oa, out = o0);
    Register(in = in, load = ob, out = o1);
    Register(in = in, load = oc, out = o2);
    Register(in = in, load = od, out = o3);
    Register(in = in, load = oe, out = o4);
    Register(in = in, load = af, out = o5);
    Register(in = in, load = og, out = o6);
    Register(in = in, load = oh, out = o7);

    Mux8Way16(a = o0, b = o1, c = o2, d = o3, e = o4,
              f = o5, g = o6, h = o7, sel = address, out = out);
}